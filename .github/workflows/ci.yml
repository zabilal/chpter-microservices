# .github/workflows/ci.yml
name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: zabilal/microservices

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21

    - name: Install Protoc
      run: |
        apt-get update && apt-get install -y protobuf-compiler
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

    - name: Generate Proto
      run: make proto

    - name: Run Tests
      run: make test

    - name: Run Integration Tests
      run: make integration-test

    - name: Upload Coverage
      uses: codecov/codecov-action@v2
      with:
        files: ./coverage.out

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push User Service
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./user-service/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/user-service:latest

    - name: Build and push Order Service
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./order-service/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/order-service:latest

    - name: Build and push API Gateway
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./api-gateway/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/gateway:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name your-cluster-name

    - name: Deploy to EKS
      run: |
        kubectl apply -f deployments/k8s/namespace.yaml
        kubectl apply -f deployments/k8s/configmap.yaml
        kubectl apply -f deployments/k8s/secrets.yaml
        kubectl apply -f deployments/k8s/user-service.yaml
        kubectl apply -f deployments/k8s/order-service.yaml
        kubectl apply -f deployments/k8s/gateway.yaml